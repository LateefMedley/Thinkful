-- 1
SELECT 
	* 
FROM 
	naep;


-- 2
SELECT 
	* 
FROM 
	naep
LIMIT 
	50;


-- 3
SELECT	
	state,
	AVG(avg_math_4_score),
	MAX(avg_math_4_score),
	MIN(avg_math_4_score),
	COUNT(avg_math_4_score)
FROM
	naep
GROUP BY
	state
ORDER BY
	state;


-- 4
SELECT
	state,
	AVG(avg_math_4_score),
	MAX(avg_math_4_score),
	MIN(avg_math_4_score),
	COUNT(avg_math_4_score)
FROM
	naep
GROUP BY
	1
HAVING 
	MAX(avg_math_4_score) - MIN(avg_math_4_score) > 30
ORDER BY
	1;
	
	
-- 5
SELECT
	state AS bottom_10_states
FROM
	naep
WHERE
	year = 2000
ORDER BY avg_math_4_score DESC
LIMIT 10;
	

-- 6
SELECT
	ROUND(AVG(avg_math_4_score), 2)
FROM
	naep
WHERE
	year = 2000
GROUP BY
	year;


-- 7
SELECT
	state AS below_average_states_y2000
FROM
	naep
WHERE
	(avg_math_4_score <= (SELECT
						 	AVG(avg_math_4_score)
						 FROM
						 	naep
						 WHERE
						 	year = 2000
						 GROUP BY
						 	year))
AND
	year = 2000;


-- 8
SELECT
	state AS scores_missing_y2000
FROM
	naep
WHERE
	year = 2000 
AND
	avg_math_4_score IS NULL;
	

-- 9
WITH state_math AS (
	SELECT
		id,
		state,
		avg_math_4_score
	FROM
		naep
	WHERE
		year = 2000
	AND
		avg_math_4_score IS NOT NULL)
SELECT
	finance.id,
	state_math.state,
	finance.total_expenditure,
	ROUND(avg_math_4_score, 2)
FROM
	state_math
JOIN
	finance
ON
	state_math.id = finance.id
ORDER BY 3 DESC;
